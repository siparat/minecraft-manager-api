model App {
    id           Int              @id @default(autoincrement())
    createdAt    DateTime         @default(now())
    updatedAt    DateTime         @updatedAt
    packageName  String           @unique
    status       AppStatus        @default(PLANNED)
    logo         String
    banner       String
    apk          String?
    bundle       String?
    translations AppTranslation[]
    mods         Mod[]
    issues       AppIssue[]
    sdk          AppSdk?
}

model AppIssue {
    id        Int         @id @default(autoincrement())
    createdAt DateTime    @default(now())
    email     String
    text      String
    status    IssueStatus @default(CREATED)
    app       App         @relation(fields: [appId], references: [id], onDelete: Cascade)
    appId     Int
}

model AppSdk {
    appId         Int     @unique
    app           App     @relation(fields: [appId], references: [id], onDelete: Cascade)
    isAdsEnabled  Boolean @default(true)
    metricaToken  String?
    appLovinToken String?
    adMobToken    String?

    firstOpenCode   String?
    firstInterCode  String?
    firstNativeCode String?

    secondOpenCode   String?
    secondInterCode  String?
    secondNativeCode String?
}

model Language {
    id           Int              @id @default(autoincrement())
    code         String           @unique
    nameOriginal String
    nameRu       String
    translations AppTranslation[]
}

model AppTranslation {
    id         Int      @id @default(autoincrement())
    app        App      @relation(fields: [appId], references: [id], onDelete: Cascade)
    appId      Int
    language   Language @relation(fields: [languageId], references: [id], onDelete: Cascade)
    languageId Int
    name       String

    @@unique([appId, languageId])
}

enum AppStatus {
    PLANNED
    IN_PROGRESS
    PUBLISHED
}

enum IssueStatus {
    CREATED
    SOLVED
    DELETED
}
